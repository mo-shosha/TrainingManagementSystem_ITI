// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingManagementSystem_ITI.Data;

#nullable disable

namespace TrainingManagementSystem_ITI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Programming",
                            InstructorId = 2,
                            Name = "C# Basics"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Web Development",
                            InstructorId = 2,
                            Name = "ASP.NET MVC"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Databases",
                            InstructorId = 3,
                            Name = "Database Design"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Programming",
                            InstructorId = 3,
                            Name = "OOP Concepts"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Web Development",
                            InstructorId = 2,
                            Name = "Frontend Basics"
                        });
                });

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("TraineeId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SessionId = 1,
                            TraineeId = 4,
                            Value = 85
                        },
                        new
                        {
                            Id = 2,
                            SessionId = 1,
                            TraineeId = 5,
                            Value = 90
                        },
                        new
                        {
                            Id = 3,
                            SessionId = 2,
                            TraineeId = 4,
                            Value = 78
                        },
                        new
                        {
                            Id = 4,
                            SessionId = 3,
                            TraineeId = 5,
                            Value = 88
                        },
                        new
                        {
                            Id = 5,
                            SessionId = 4,
                            TraineeId = 4,
                            Value = 95
                        });
                });

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            EndDate = new DateTime(2025, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            EndDate = new DateTime(2025, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            EndDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            EndDate = new DateTime(2025, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            EndDate = new DateTime(2025, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin1@mail.com",
                            Name = "Admin One",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "inst1@mail.com",
                            Name = "Instructor One",
                            Role = "Instructor"
                        },
                        new
                        {
                            Id = 3,
                            Email = "inst2@mail.com",
                            Name = "Instructor Two",
                            Role = "Instructor"
                        },
                        new
                        {
                            Id = 4,
                            Email = "trainee1@mail.com",
                            Name = "Trainee One",
                            Role = "Trainee"
                        },
                        new
                        {
                            Id = 5,
                            Email = "trainee2@mail.com",
                            Name = "Trainee Two",
                            Role = "Trainee"
                        });
                });

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.Course", b =>
                {
                    b.HasOne("TrainingManagementSystem_ITI.Models.User", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.Grade", b =>
                {
                    b.HasOne("TrainingManagementSystem_ITI.Models.Session", "Session")
                        .WithMany("Grades")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingManagementSystem_ITI.Models.User", "Trainee")
                        .WithMany("Grades")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.Session", b =>
                {
                    b.HasOne("TrainingManagementSystem_ITI.Models.Course", "Course")
                        .WithMany("Sessions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.Course", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.Session", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("TrainingManagementSystem_ITI.Models.User", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
